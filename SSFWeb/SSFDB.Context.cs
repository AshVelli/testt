//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSFWeb
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SSFDBEntities : DbContext
    {
        public SSFDBEntities()
            : base("name=SSFDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Articles> Articles { get; set; }
        public DbSet<Cities> Cities { get; set; }
        public DbSet<Couriers> Couriers { get; set; }
        public DbSet<CSRCategories> CSRCategories { get; set; }
        public DbSet<DailyQuotes> DailyQuotes { get; set; }
        public DbSet<DamageStockPaymentDetails> DamageStockPaymentDetails { get; set; }
        public DbSet<DistributoresAndDealers> DistributoresAndDealers { get; set; }
        public DbSet<DistributorInventoryMovement> DistributorInventoryMovement { get; set; }
        public DbSet<DistributorInventoryMovementDetails> DistributorInventoryMovementDetails { get; set; }
        public DbSet<Districts> Districts { get; set; }
        public DbSet<eBooks> eBooks { get; set; }
        public DbSet<eReaderPaymentDetails> eReaderPaymentDetails { get; set; }
        public DbSet<eReaderSubscriptionDetails> eReaderSubscriptionDetails { get; set; }
        public DbSet<EventsAndNews> EventsAndNews { get; set; }
        public DbSet<HomeImages> HomeImages { get; set; }
        public DbSet<Inventory> Inventory { get; set; }
        public DbSet<InventoryCategories> InventoryCategories { get; set; }
        public DbSet<InventoryDamageStock> InventoryDamageStock { get; set; }
        public DbSet<InventoryNew> InventoryNew { get; set; }
        public DbSet<InventoryRequestDetails> InventoryRequestDetails { get; set; }
        public DbSet<InventoryRequests> InventoryRequests { get; set; }
        public DbSet<InventoryReturns> InventoryReturns { get; set; }
        public DbSet<InventorySales> InventorySales { get; set; }
        public DbSet<InventoryTypes> InventoryTypes { get; set; }
        public DbSet<MagazineDeliveryDetails> MagazineDeliveryDetails { get; set; }
        public DbSet<MagazineReleaseDates> MagazineReleaseDates { get; set; }
        public DbSet<PackageDetails> PackageDetails { get; set; }
        public DbSet<Packages> Packages { get; set; }
        public DbSet<PayuInputParameters> PayuInputParameters { get; set; }
        public DbSet<PayuOutputParameters> PayuOutputParameters { get; set; }
        public DbSet<PurchaseOrderDetails> PurchaseOrderDetails { get; set; }
        public DbSet<PurchaseOrders> PurchaseOrders { get; set; }
        public DbSet<RequestPaymentDetails> RequestPaymentDetails { get; set; }
        public DbSet<ReturnStockPaymentDetails> ReturnStockPaymentDetails { get; set; }
        public DbSet<Settings> Settings { get; set; }
        public DbSet<ST_Months> ST_Months { get; set; }
        public DbSet<States> States { get; set; }
        public DbSet<Subscribers> Subscribers { get; set; }
        public DbSet<SubscriptionAmount> SubscriptionAmount { get; set; }
        public DbSet<SubscriptionDetails> SubscriptionDetails { get; set; }
        public DbSet<SubscriptionMode> SubscriptionMode { get; set; }
        public DbSet<SubscriptionType> SubscriptionType { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<TempeReaderSubscriptionDetails> TempeReaderSubscriptionDetails { get; set; }
        public DbSet<TempShippingAddress> TempShippingAddress { get; set; }
        public DbSet<TempSubscriptionDetails> TempSubscriptionDetails { get; set; }
        public DbSet<TempUserOrderDetails> TempUserOrderDetails { get; set; }
        public DbSet<TempUserOrders> TempUserOrders { get; set; }
        public DbSet<TimeZone> TimeZone { get; set; }
        public DbSet<UserComments> UserComments { get; set; }
        public DbSet<UserOrderDetails> UserOrderDetails { get; set; }
        public DbSet<UserOrders> UserOrders { get; set; }
        public DbSet<Users> Users { get; set; }
        public DbSet<UserShippingAddress> UserShippingAddress { get; set; }
        public DbSet<VendorPayments> VendorPayments { get; set; }
        public DbSet<Vendors> Vendors { get; set; }
        public DbSet<BookWeights> BookWeights { get; set; }
        public DbSet<CourierPrices> CourierPrices { get; set; }
        public DbSet<CSR> CSR { get; set; }
        public DbSet<InventoryWeights> InventoryWeights { get; set; }
    
        [EdmFunction("SSFDBEntities", "doubleSplit")]
        public virtual IQueryable<doubleSplit_Result> doubleSplit(string sourceString, string primaryDelimiter, string secondaryDelimiter)
        {
            var sourceStringParameter = sourceString != null ?
                new ObjectParameter("sourceString", sourceString) :
                new ObjectParameter("sourceString", typeof(string));
    
            var primaryDelimiterParameter = primaryDelimiter != null ?
                new ObjectParameter("primaryDelimiter", primaryDelimiter) :
                new ObjectParameter("primaryDelimiter", typeof(string));
    
            var secondaryDelimiterParameter = secondaryDelimiter != null ?
                new ObjectParameter("secondaryDelimiter", secondaryDelimiter) :
                new ObjectParameter("secondaryDelimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<doubleSplit_Result>("[SSFDBEntities].[doubleSplit](@sourceString, @primaryDelimiter, @secondaryDelimiter)", sourceStringParameter, primaryDelimiterParameter, secondaryDelimiterParameter);
        }
    
        public virtual int addEReaderSubscriberAfterPayment(Nullable<int> userId, string transactionId, string paymentStatus, string mIHPayId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var transactionIdParameter = transactionId != null ?
                new ObjectParameter("TransactionId", transactionId) :
                new ObjectParameter("TransactionId", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            var mIHPayIdParameter = mIHPayId != null ?
                new ObjectParameter("MIHPayId", mIHPayId) :
                new ObjectParameter("MIHPayId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addEReaderSubscriberAfterPayment", userIdParameter, transactionIdParameter, paymentStatusParameter, mIHPayIdParameter);
        }
    
        public virtual int addEReaderSubscriberTemp(Nullable<int> userId, Nullable<decimal> totalSubscriptionAmount)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var totalSubscriptionAmountParameter = totalSubscriptionAmount.HasValue ?
                new ObjectParameter("TotalSubscriptionAmount", totalSubscriptionAmount) :
                new ObjectParameter("TotalSubscriptionAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addEReaderSubscriberTemp", userIdParameter, totalSubscriptionAmountParameter);
        }
    
        public virtual int addSubscriber(Nullable<int> subscriberId, Nullable<int> userId, string mobileNo, string address, Nullable<int> stateId, Nullable<int> districtId, string city, Nullable<int> pinCode, Nullable<int> modeId, Nullable<int> typeId, Nullable<decimal> amount, string transactionId, string paymentStatus, string mIHPayId, Nullable<int> noOfSubscriptions)
        {
            var subscriberIdParameter = subscriberId.HasValue ?
                new ObjectParameter("SubscriberId", subscriberId) :
                new ObjectParameter("SubscriberId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pinCodeParameter = pinCode.HasValue ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(int));
    
            var modeIdParameter = modeId.HasValue ?
                new ObjectParameter("ModeId", modeId) :
                new ObjectParameter("ModeId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var transactionIdParameter = transactionId != null ?
                new ObjectParameter("TransactionId", transactionId) :
                new ObjectParameter("TransactionId", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            var mIHPayIdParameter = mIHPayId != null ?
                new ObjectParameter("MIHPayId", mIHPayId) :
                new ObjectParameter("MIHPayId", typeof(string));
    
            var noOfSubscriptionsParameter = noOfSubscriptions.HasValue ?
                new ObjectParameter("NoOfSubscriptions", noOfSubscriptions) :
                new ObjectParameter("NoOfSubscriptions", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addSubscriber", subscriberIdParameter, userIdParameter, mobileNoParameter, addressParameter, stateIdParameter, districtIdParameter, cityParameter, pinCodeParameter, modeIdParameter, typeIdParameter, amountParameter, transactionIdParameter, paymentStatusParameter, mIHPayIdParameter, noOfSubscriptionsParameter);
        }
    
        public virtual int addSubscriberAfterPayment(Nullable<int> tempSubscriptionDetailId, Nullable<int> subscriberId, Nullable<int> userId, Nullable<int> modeId, string transactionId, string paymentStatus, string mIHPayId)
        {
            var tempSubscriptionDetailIdParameter = tempSubscriptionDetailId.HasValue ?
                new ObjectParameter("TempSubscriptionDetailId", tempSubscriptionDetailId) :
                new ObjectParameter("TempSubscriptionDetailId", typeof(int));
    
            var subscriberIdParameter = subscriberId.HasValue ?
                new ObjectParameter("SubscriberId", subscriberId) :
                new ObjectParameter("SubscriberId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var modeIdParameter = modeId.HasValue ?
                new ObjectParameter("ModeId", modeId) :
                new ObjectParameter("ModeId", typeof(int));
    
            var transactionIdParameter = transactionId != null ?
                new ObjectParameter("TransactionId", transactionId) :
                new ObjectParameter("TransactionId", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            var mIHPayIdParameter = mIHPayId != null ?
                new ObjectParameter("MIHPayId", mIHPayId) :
                new ObjectParameter("MIHPayId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addSubscriberAfterPayment", tempSubscriptionDetailIdParameter, subscriberIdParameter, userIdParameter, modeIdParameter, transactionIdParameter, paymentStatusParameter, mIHPayIdParameter);
        }
    
        public virtual int addSubscriberByAdmin(string title, string firstName, string lastName, string email, string password, string mobileNo, string address, Nullable<int> stateId, Nullable<int> districtId, string city, Nullable<int> pinCode, Nullable<int> modeId, Nullable<int> typeId, Nullable<int> noOfSubscriptions, Nullable<decimal> amount)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pinCodeParameter = pinCode.HasValue ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(int));
    
            var modeIdParameter = modeId.HasValue ?
                new ObjectParameter("ModeId", modeId) :
                new ObjectParameter("ModeId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var noOfSubscriptionsParameter = noOfSubscriptions.HasValue ?
                new ObjectParameter("NoOfSubscriptions", noOfSubscriptions) :
                new ObjectParameter("NoOfSubscriptions", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addSubscriberByAdmin", titleParameter, firstNameParameter, lastNameParameter, emailParameter, passwordParameter, mobileNoParameter, addressParameter, stateIdParameter, districtIdParameter, cityParameter, pinCodeParameter, modeIdParameter, typeIdParameter, noOfSubscriptionsParameter, amountParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> addSubscriberTemp(Nullable<int> subscriberId, Nullable<int> userId, string mobileNo, string address, Nullable<int> stateId, Nullable<int> districtId, string city, Nullable<int> pinCode, Nullable<int> modeId, Nullable<int> typeId, Nullable<decimal> amount, Nullable<int> noOfSubscriptions)
        {
            var subscriberIdParameter = subscriberId.HasValue ?
                new ObjectParameter("SubscriberId", subscriberId) :
                new ObjectParameter("SubscriberId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pinCodeParameter = pinCode.HasValue ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(int));
    
            var modeIdParameter = modeId.HasValue ?
                new ObjectParameter("ModeId", modeId) :
                new ObjectParameter("ModeId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var noOfSubscriptionsParameter = noOfSubscriptions.HasValue ?
                new ObjectParameter("NoOfSubscriptions", noOfSubscriptions) :
                new ObjectParameter("NoOfSubscriptions", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("addSubscriberTemp", subscriberIdParameter, userIdParameter, mobileNoParameter, addressParameter, stateIdParameter, districtIdParameter, cityParameter, pinCodeParameter, modeIdParameter, typeIdParameter, amountParameter, noOfSubscriptionsParameter);
        }
    
        public virtual int BlockUsers_Sp(Nullable<int> userId, Nullable<bool> blockStatus)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var blockStatusParameter = blockStatus.HasValue ?
                new ObjectParameter("BlockStatus", blockStatus) :
                new ObjectParameter("BlockStatus", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BlockUsers_Sp", userIdParameter, blockStatusParameter);
        }
    
        public virtual int changePassword(string oldpassword, string newpassword, Nullable<int> userId)
        {
            var oldpasswordParameter = oldpassword != null ?
                new ObjectParameter("oldpassword", oldpassword) :
                new ObjectParameter("oldpassword", typeof(string));
    
            var newpasswordParameter = newpassword != null ?
                new ObjectParameter("newpassword", newpassword) :
                new ObjectParameter("newpassword", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("changePassword", oldpasswordParameter, newpasswordParameter, userIdParameter);
        }
    
        public virtual int ChangePasswordAdmin(string oldpassword, string newpassword, Nullable<int> distributorOrDealerId)
        {
            var oldpasswordParameter = oldpassword != null ?
                new ObjectParameter("oldpassword", oldpassword) :
                new ObjectParameter("oldpassword", typeof(string));
    
            var newpasswordParameter = newpassword != null ?
                new ObjectParameter("newpassword", newpassword) :
                new ObjectParameter("newpassword", typeof(string));
    
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangePasswordAdmin", oldpasswordParameter, newpasswordParameter, distributorOrDealerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CheckLoginDetails(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckLoginDetails", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<checkStockOfOnlinePortal_Result> checkStockOfOnlinePortal(Nullable<int> inventoryId, Nullable<int> quantityOfUser)
        {
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            var quantityOfUserParameter = quantityOfUser.HasValue ?
                new ObjectParameter("QuantityOfUser", quantityOfUser) :
                new ObjectParameter("QuantityOfUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkStockOfOnlinePortal_Result>("checkStockOfOnlinePortal", inventoryIdParameter, quantityOfUserParameter);
        }
    
        public virtual ObjectResult<checkSubscription_Result> checkSubscription(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkSubscription_Result>("checkSubscription", userIdParameter);
        }
    
        public virtual int CheckUserEmailActivation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckUserEmailActivation");
        }
    
        public virtual ObjectResult<Nullable<int>> CheckUserLoginDetails(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckUserLoginDetails", emailParameter, passwordParameter);
        }
    
        public virtual int checkUserSubscription()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("checkUserSubscription");
        }
    
        public virtual int delArticle(Nullable<int> articleId)
        {
            var articleIdParameter = articleId.HasValue ?
                new ObjectParameter("ArticleId", articleId) :
                new ObjectParameter("ArticleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delArticle", articleIdParameter);
        }
    
        public virtual int delCourier(Nullable<int> courierId)
        {
            var courierIdParameter = courierId.HasValue ?
                new ObjectParameter("CourierId", courierId) :
                new ObjectParameter("CourierId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delCourier", courierIdParameter);
        }
    
        public virtual int delCSR(Nullable<int> cSRId)
        {
            var cSRIdParameter = cSRId.HasValue ?
                new ObjectParameter("CSRId", cSRId) :
                new ObjectParameter("CSRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delCSR", cSRIdParameter);
        }
    
        public virtual int delDailyQuote(Nullable<int> dailyQuoteId)
        {
            var dailyQuoteIdParameter = dailyQuoteId.HasValue ?
                new ObjectParameter("DailyQuoteId", dailyQuoteId) :
                new ObjectParameter("DailyQuoteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delDailyQuote", dailyQuoteIdParameter);
        }
    
        public virtual int delDistributoresAndDealers(Nullable<int> distributorOrDealerId)
        {
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delDistributoresAndDealers", distributorOrDealerIdParameter);
        }
    
        public virtual int delEBook(Nullable<int> eBookId)
        {
            var eBookIdParameter = eBookId.HasValue ?
                new ObjectParameter("eBookId", eBookId) :
                new ObjectParameter("eBookId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delEBook", eBookIdParameter);
        }
    
        public virtual int delEventsAndNews(Nullable<int> eventOrNewsId)
        {
            var eventOrNewsIdParameter = eventOrNewsId.HasValue ?
                new ObjectParameter("EventOrNewsId", eventOrNewsId) :
                new ObjectParameter("EventOrNewsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delEventsAndNews", eventOrNewsIdParameter);
        }
    
        public virtual int delInventory(Nullable<int> inventoryId)
        {
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delInventory", inventoryIdParameter);
        }
    
        public virtual int delInventoryCategory(string inventoryCategoryId)
        {
            var inventoryCategoryIdParameter = inventoryCategoryId != null ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delInventoryCategory", inventoryCategoryIdParameter);
        }
    
        public virtual int delInventoryDamageStock(Nullable<int> inventoryDamageStockId)
        {
            var inventoryDamageStockIdParameter = inventoryDamageStockId.HasValue ?
                new ObjectParameter("InventoryDamageStockId", inventoryDamageStockId) :
                new ObjectParameter("InventoryDamageStockId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delInventoryDamageStock", inventoryDamageStockIdParameter);
        }
    
        public virtual int delInventoryReturns(Nullable<int> inventoryReturnId)
        {
            var inventoryReturnIdParameter = inventoryReturnId.HasValue ?
                new ObjectParameter("InventoryReturnId", inventoryReturnId) :
                new ObjectParameter("InventoryReturnId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delInventoryReturns", inventoryReturnIdParameter);
        }
    
        public virtual int delInventorySales(Nullable<int> inventorySaleId)
        {
            var inventorySaleIdParameter = inventorySaleId.HasValue ?
                new ObjectParameter("InventorySaleId", inventorySaleId) :
                new ObjectParameter("InventorySaleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delInventorySales", inventorySaleIdParameter);
        }
    
        public virtual int delOrApproveUserComment(Nullable<int> commentId, Nullable<bool> approve)
        {
            var commentIdParameter = commentId.HasValue ?
                new ObjectParameter("CommentId", commentId) :
                new ObjectParameter("CommentId", typeof(int));
    
            var approveParameter = approve.HasValue ?
                new ObjectParameter("Approve", approve) :
                new ObjectParameter("Approve", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delOrApproveUserComment", commentIdParameter, approveParameter);
        }
    
        public virtual int delPackage(Nullable<int> packageId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delPackage", packageIdParameter);
        }
    
        public virtual int delPurchaseOrder(Nullable<int> purchaseOrderId)
        {
            var purchaseOrderIdParameter = purchaseOrderId.HasValue ?
                new ObjectParameter("PurchaseOrderId", purchaseOrderId) :
                new ObjectParameter("PurchaseOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delPurchaseOrder", purchaseOrderIdParameter);
        }
    
        public virtual int delRequest(Nullable<int> inventoryRequestId)
        {
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delRequest", inventoryRequestIdParameter);
        }
    
        public virtual int delSubscriptionAmount(string amountId)
        {
            var amountIdParameter = amountId != null ?
                new ObjectParameter("AmountId", amountId) :
                new ObjectParameter("AmountId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delSubscriptionAmount", amountIdParameter);
        }
    
        public virtual int delSubscriptionType(string typeId)
        {
            var typeIdParameter = typeId != null ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delSubscriptionType", typeIdParameter);
        }
    
        public virtual int delVendor(Nullable<int> vendorId)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("delVendor", vendorIdParameter);
        }
    
        public virtual ObjectResult<getAdminInventory_Result> getAdminInventory(Nullable<int> inventoryTypeId)
        {
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAdminInventory_Result>("getAdminInventory", inventoryTypeIdParameter);
        }
    
        public virtual int getAllOrders(string orderId, string status, string fromDate, string toDate)
        {
            var orderIdParameter = orderId != null ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getAllOrders", orderIdParameter, statusParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<getArticleDetailsBasedOnId_Result> getArticleDetailsBasedOnId(Nullable<int> articleId)
        {
            var articleIdParameter = articleId.HasValue ?
                new ObjectParameter("ArticleId", articleId) :
                new ObjectParameter("ArticleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getArticleDetailsBasedOnId_Result>("getArticleDetailsBasedOnId", articleIdParameter);
        }
    
        public virtual ObjectResult<getArticles_Result> getArticles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getArticles_Result>("getArticles");
        }
    
        public virtual ObjectResult<getBatchIdForInventory_Result> getBatchIdForInventory(Nullable<int> inventoryId)
        {
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getBatchIdForInventory_Result>("getBatchIdForInventory", inventoryIdParameter);
        }
    
        public virtual ObjectResult<getComplementarySubscribers_Result> getComplementarySubscribers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getComplementarySubscribers_Result>("getComplementarySubscribers");
        }
    
        public virtual ObjectResult<getCouriers_Result> getCouriers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCouriers_Result>("getCouriers");
        }
    
        public virtual ObjectResult<getCSR_Result> getCSR()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCSR_Result>("getCSR");
        }
    
        public virtual ObjectResult<getCSRByCategoryId_Result> getCSRByCategoryId(Nullable<int> cSRCategoryId)
        {
            var cSRCategoryIdParameter = cSRCategoryId.HasValue ?
                new ObjectParameter("CSRCategoryId", cSRCategoryId) :
                new ObjectParameter("CSRCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCSRByCategoryId_Result>("getCSRByCategoryId", cSRCategoryIdParameter);
        }
    
        public virtual ObjectResult<getCSRById_Result> getCSRById(Nullable<int> cSRId)
        {
            var cSRIdParameter = cSRId.HasValue ?
                new ObjectParameter("CSRId", cSRId) :
                new ObjectParameter("CSRId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCSRById_Result>("getCSRById", cSRIdParameter);
        }
    
        public virtual ObjectResult<getCSRCategories_Result> getCSRCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCSRCategories_Result>("getCSRCategories");
        }
    
        public virtual ObjectResult<getDailyQouteSubscribedEmployees_Result> getDailyQouteSubscribedEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDailyQouteSubscribedEmployees_Result>("getDailyQouteSubscribedEmployees");
        }
    
        public virtual ObjectResult<getDailyQuoteByDate_Result> getDailyQuoteByDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDailyQuoteByDate_Result>("getDailyQuoteByDate");
        }
    
        public virtual ObjectResult<getDailyQuotes_Result> getDailyQuotes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDailyQuotes_Result>("getDailyQuotes");
        }
    
        public virtual ObjectResult<getDealers_Result> getDealers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDealers_Result>("getDealers");
        }
    
        public virtual ObjectResult<getDealersForDistributor_Result> getDealersForDistributor(Nullable<int> distributorOrDealerId)
        {
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDealersForDistributor_Result>("getDealersForDistributor", distributorOrDealerIdParameter);
        }
    
        public virtual ObjectResult<string> getDistName(Nullable<int> districId)
        {
            var districIdParameter = districId.HasValue ?
                new ObjectParameter("districId", districId) :
                new ObjectParameter("districId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getDistName", districIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> getDistributorDiscount(Nullable<int> inventoryRequestId)
        {
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("getDistributorDiscount", inventoryRequestIdParameter);
        }
    
        public virtual ObjectResult<getDistributores_Result> getDistributores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDistributores_Result>("getDistributores");
        }
    
        public virtual ObjectResult<getDistributoresAndDealers_Result> getDistributoresAndDealers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDistributoresAndDealers_Result>("getDistributoresAndDealers");
        }
    
        public virtual ObjectResult<getDistributorOrDealerInventory_Result> getDistributorOrDealerInventory(Nullable<int> distributorOrDealerId)
        {
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDistributorOrDealerInventory_Result>("getDistributorOrDealerInventory", distributorOrDealerIdParameter);
        }
    
        public virtual ObjectResult<getDistrictCities_Result> getDistrictCities(Nullable<int> districtId)
        {
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getDistrictCities_Result>("getDistrictCities", districtIdParameter);
        }
    
        public virtual ObjectResult<getEBookDetails_Result> getEBookDetails(Nullable<int> eBookId)
        {
            var eBookIdParameter = eBookId.HasValue ?
                new ObjectParameter("eBookId", eBookId) :
                new ObjectParameter("eBookId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEBookDetails_Result>("getEBookDetails", eBookIdParameter);
        }
    
        public virtual ObjectResult<getEBooks_Result> getEBooks(Nullable<int> inventoryCategoryId, string title)
        {
            var inventoryCategoryIdParameter = inventoryCategoryId.HasValue ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEBooks_Result>("getEBooks", inventoryCategoryIdParameter, titleParameter);
        }
    
        public virtual ObjectResult<getEBooksForUser_Result> getEBooksForUser(Nullable<int> eReaderSubscriberId, Nullable<int> inventoryCategoryId)
        {
            var eReaderSubscriberIdParameter = eReaderSubscriberId.HasValue ?
                new ObjectParameter("EReaderSubscriberId", eReaderSubscriberId) :
                new ObjectParameter("EReaderSubscriberId", typeof(int));
    
            var inventoryCategoryIdParameter = inventoryCategoryId.HasValue ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEBooksForUser_Result>("getEBooksForUser", eReaderSubscriberIdParameter, inventoryCategoryIdParameter);
        }
    
        public virtual ObjectResult<getEReadersList_Result> getEReadersList(Nullable<int> inventoryCategoryId, Nullable<int> eBookId)
        {
            var inventoryCategoryIdParameter = inventoryCategoryId.HasValue ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(int));
    
            var eBookIdParameter = eBookId.HasValue ?
                new ObjectParameter("eBookId", eBookId) :
                new ObjectParameter("eBookId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEReadersList_Result>("getEReadersList", inventoryCategoryIdParameter, eBookIdParameter);
        }
    
        public virtual ObjectResult<getEReaderTransactionDetails_Result> getEReaderTransactionDetails(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEReaderTransactionDetails_Result>("getEReaderTransactionDetails", userIdParameter);
        }
    
        public virtual ObjectResult<getEventDetailsBasedOnId_Result> getEventDetailsBasedOnId(Nullable<int> eventId)
        {
            var eventIdParameter = eventId.HasValue ?
                new ObjectParameter("EventId", eventId) :
                new ObjectParameter("EventId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEventDetailsBasedOnId_Result>("getEventDetailsBasedOnId", eventIdParameter);
        }
    
        public virtual ObjectResult<getEventsAndNews_Result> getEventsAndNews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEventsAndNews_Result>("getEventsAndNews");
        }
    
        public virtual ObjectResult<getEventsForUsers_Result> getEventsForUsers(Nullable<int> topfive)
        {
            var topfiveParameter = topfive.HasValue ?
                new ObjectParameter("Topfive", topfive) :
                new ObjectParameter("Topfive", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getEventsForUsers_Result>("getEventsForUsers", topfiveParameter);
        }
    
        public virtual ObjectResult<getHomeImages_Result> getHomeImages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getHomeImages_Result>("getHomeImages");
        }
    
        public virtual ObjectResult<getInventory_Result> getInventory(Nullable<int> inventoryTypeId)
        {
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventory_Result>("getInventory", inventoryTypeIdParameter);
        }
    
        public virtual ObjectResult<getInventoryBatchIdForDistributor_Result> getInventoryBatchIdForDistributor(Nullable<int> distributorId, Nullable<int> inventoryId)
        {
            var distributorIdParameter = distributorId.HasValue ?
                new ObjectParameter("DistributorId", distributorId) :
                new ObjectParameter("DistributorId", typeof(int));
    
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryBatchIdForDistributor_Result>("getInventoryBatchIdForDistributor", distributorIdParameter, inventoryIdParameter);
        }
    
        public virtual ObjectResult<getInventoryById_Result> getInventoryById(Nullable<int> inventoryId)
        {
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryById_Result>("getInventoryById", inventoryIdParameter);
        }
    
        public virtual ObjectResult<getInventoryByTypeAndCategory_Result> getInventoryByTypeAndCategory(Nullable<int> inventoryTypeId, Nullable<int> inventoryCategoryId)
        {
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            var inventoryCategoryIdParameter = inventoryCategoryId.HasValue ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryByTypeAndCategory_Result>("getInventoryByTypeAndCategory", inventoryTypeIdParameter, inventoryCategoryIdParameter);
        }
    
        public virtual ObjectResult<getInventoryByTypeAndCategoryForDealer_Result> getInventoryByTypeAndCategoryForDealer(Nullable<int> inventoryTypeId, Nullable<int> inventoryCategoryId, Nullable<int> dealerId)
        {
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            var inventoryCategoryIdParameter = inventoryCategoryId.HasValue ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(int));
    
            var dealerIdParameter = dealerId.HasValue ?
                new ObjectParameter("DealerId", dealerId) :
                new ObjectParameter("DealerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryByTypeAndCategoryForDealer_Result>("getInventoryByTypeAndCategoryForDealer", inventoryTypeIdParameter, inventoryCategoryIdParameter, dealerIdParameter);
        }
    
        public virtual ObjectResult<getInventoryByTypeAndCategoryForDistributor_Result> getInventoryByTypeAndCategoryForDistributor(Nullable<int> inventoryTypeId, Nullable<int> inventoryCategoryId)
        {
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            var inventoryCategoryIdParameter = inventoryCategoryId.HasValue ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryByTypeAndCategoryForDistributor_Result>("getInventoryByTypeAndCategoryForDistributor", inventoryTypeIdParameter, inventoryCategoryIdParameter);
        }
    
        public virtual ObjectResult<getInventoryCategories_Result> getInventoryCategories(Nullable<int> inventoryTypeId)
        {
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryCategories_Result>("getInventoryCategories", inventoryTypeIdParameter);
        }
    
        public virtual ObjectResult<getInventoryCategoriesForEBook_Result> getInventoryCategoriesForEBook()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryCategoriesForEBook_Result>("getInventoryCategoriesForEBook");
        }
    
        public virtual ObjectResult<getInventoryCostDetailsByRequestId_Result> getInventoryCostDetailsByRequestId(Nullable<int> inventoryId, Nullable<int> inventoryRequestId, Nullable<int> quantity)
        {
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryCostDetailsByRequestId_Result>("getInventoryCostDetailsByRequestId", inventoryIdParameter, inventoryRequestIdParameter, quantityParameter);
        }
    
        public virtual ObjectResult<getInventoryDamageStock_Result> getInventoryDamageStock(Nullable<int> loginUser)
        {
            var loginUserParameter = loginUser.HasValue ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryDamageStock_Result>("getInventoryDamageStock", loginUserParameter);
        }
    
        public virtual ObjectResult<getInventoryDetails_Result> getInventoryDetails(Nullable<int> inventoryId)
        {
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryDetails_Result>("getInventoryDetails", inventoryIdParameter);
        }
    
        public virtual ObjectResult<getInventoryForDropdown_Result> getInventoryForDropdown()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryForDropdown_Result>("getInventoryForDropdown");
        }
    
        public virtual ObjectResult<getInventoryForPackages_Result> getInventoryForPackages(Nullable<int> packageId, Nullable<int> inventoryTypeId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryForPackages_Result>("getInventoryForPackages", packageIdParameter, inventoryTypeIdParameter);
        }
    
        public virtual ObjectResult<getInventoryForPurchaseOrder_Result> getInventoryForPurchaseOrder(Nullable<int> purchaseOrderId, Nullable<int> inventoryTypeId)
        {
            var purchaseOrderIdParameter = purchaseOrderId.HasValue ?
                new ObjectParameter("PurchaseOrderId", purchaseOrderId) :
                new ObjectParameter("PurchaseOrderId", typeof(int));
    
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryForPurchaseOrder_Result>("getInventoryForPurchaseOrder", purchaseOrderIdParameter, inventoryTypeIdParameter);
        }
    
        public virtual ObjectResult<getInventoryForRequestStock_Result> getInventoryForRequestStock(Nullable<int> inventoryRequestId, Nullable<int> inventoryTypeId, Nullable<int> inventoryCategoryId)
        {
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            var inventoryCategoryIdParameter = inventoryCategoryId.HasValue ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryForRequestStock_Result>("getInventoryForRequestStock", inventoryRequestIdParameter, inventoryTypeIdParameter, inventoryCategoryIdParameter);
        }
    
        public virtual ObjectResult<getInventoryReturns_Result> getInventoryReturns(Nullable<int> loginUser)
        {
            var loginUserParameter = loginUser.HasValue ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryReturns_Result>("getInventoryReturns", loginUserParameter);
        }
    
        public virtual ObjectResult<getInventorySales_Result> getInventorySales(Nullable<int> distributorOrDealerId)
        {
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventorySales_Result>("getInventorySales", distributorOrDealerIdParameter);
        }
    
        public virtual ObjectResult<getInventoryShortDetails_Result> getInventoryShortDetails(Nullable<int> inventoryTypeId, Nullable<int> inventoryCategoryId, string inventoryName)
        {
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            var inventoryCategoryIdParameter = inventoryCategoryId.HasValue ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(int));
    
            var inventoryNameParameter = inventoryName != null ?
                new ObjectParameter("InventoryName", inventoryName) :
                new ObjectParameter("InventoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryShortDetails_Result>("getInventoryShortDetails", inventoryTypeIdParameter, inventoryCategoryIdParameter, inventoryNameParameter);
        }
    
        public virtual ObjectResult<getInventoryTypes_Result> getInventoryTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInventoryTypes_Result>("getInventoryTypes");
        }
    
        public virtual ObjectResult<getInvoiceReport_Result> getInvoiceReport(Nullable<int> inventoryRequestId)
        {
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getInvoiceReport_Result>("getInvoiceReport", inventoryRequestIdParameter);
        }
    
        public virtual ObjectResult<getLatestEventsandNews_Result> getLatestEventsandNews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLatestEventsandNews_Result>("getLatestEventsandNews");
        }
    
        public virtual int getLatestOrderForEmail(Nullable<int> userId, Nullable<int> userOrderId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userOrderIdParameter = userOrderId.HasValue ?
                new ObjectParameter("UserOrderId", userOrderId) :
                new ObjectParameter("UserOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getLatestOrderForEmail", userIdParameter, userOrderIdParameter);
        }
    
        public virtual ObjectResult<getLatestPackages_Result> getLatestPackages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getLatestPackages_Result>("getLatestPackages");
        }
    
        public virtual ObjectResult<getMagazineReleaseDates_Result> getMagazineReleaseDates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMagazineReleaseDates_Result>("getMagazineReleaseDates");
        }
    
        public virtual ObjectResult<getMonths_Result> getMonths()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMonths_Result>("getMonths");
        }
    
        public virtual ObjectResult<getNewsAndArticales_Result> getNewsAndArticales(Nullable<int> topfive)
        {
            var topfiveParameter = topfive.HasValue ?
                new ObjectParameter("Topfive", topfive) :
                new ObjectParameter("Topfive", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getNewsAndArticales_Result>("getNewsAndArticales", topfiveParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getNoOfMagazines(Nullable<int> typeId)
        {
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getNoOfMagazines", typeIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> getOnlineShippingCharges()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("getOnlineShippingCharges");
        }
    
        public virtual ObjectResult<Nullable<int>> getOnlineShippingChargesNew(string booksData)
        {
            var booksDataParameter = booksData != null ?
                new ObjectParameter("BooksData", booksData) :
                new ObjectParameter("BooksData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getOnlineShippingChargesNew", booksDataParameter);
        }
    
        public virtual ObjectResult<getOrderDetails_Result> getOrderDetails(Nullable<int> userOrderId)
        {
            var userOrderIdParameter = userOrderId.HasValue ?
                new ObjectParameter("UserOrderId", userOrderId) :
                new ObjectParameter("UserOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getOrderDetails_Result>("getOrderDetails", userOrderIdParameter);
        }
    
        public virtual int getOrdersForUsers(string userId, string orderId, string fromDate, string toDate)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var orderIdParameter = orderId != null ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(string));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getOrdersForUsers", userIdParameter, orderIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<getOrderShippingAddress_Result> getOrderShippingAddress(Nullable<int> userOrderId)
        {
            var userOrderIdParameter = userOrderId.HasValue ?
                new ObjectParameter("UserOrderId", userOrderId) :
                new ObjectParameter("UserOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getOrderShippingAddress_Result>("getOrderShippingAddress", userOrderIdParameter);
        }
    
        public virtual ObjectResult<getPackageAvailability_Result> getPackageAvailability()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPackageAvailability_Result>("getPackageAvailability");
        }
    
        public virtual ObjectResult<getPackageDetails_Result> getPackageDetails(Nullable<int> packageId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPackageDetails_Result>("getPackageDetails", packageIdParameter);
        }
    
        public virtual ObjectResult<getPackageDetailsById_Result> getPackageDetailsById(Nullable<int> packageId)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPackageDetailsById_Result>("getPackageDetailsById", packageIdParameter);
        }
    
        public virtual ObjectResult<getPackages_Result> getPackages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPackages_Result>("getPackages");
        }
    
        public virtual ObjectResult<getPackagesByInventoryType_Result> getPackagesByInventoryType(Nullable<int> inventoryTypeId)
        {
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPackagesByInventoryType_Result>("getPackagesByInventoryType", inventoryTypeIdParameter);
        }
    
        public virtual ObjectResult<getPassword_Result> getPassword(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPassword_Result>("getPassword", emailParameter);
        }
    
        public virtual ObjectResult<getPendingAmounts_Result> getPendingAmounts(Nullable<int> distributorOrDealerId)
        {
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPendingAmounts_Result>("getPendingAmounts", distributorOrDealerIdParameter);
        }
    
        public virtual ObjectResult<getPendingAmountsOfAdmin_Result> getPendingAmountsOfAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPendingAmountsOfAdmin_Result>("getPendingAmountsOfAdmin");
        }
    
        public virtual ObjectResult<getPendingUserDetails_SP_Result> getPendingUserDetails_SP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPendingUserDetails_SP_Result>("getPendingUserDetails_SP");
        }
    
        public virtual int getPendingUserDetailsSearch_SP(string name, string email)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getPendingUserDetailsSearch_SP", nameParameter, emailParameter);
        }
    
        public virtual ObjectResult<getPendingUserNameEmailId_SP_Result> getPendingUserNameEmailId_SP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPendingUserNameEmailId_SP_Result>("getPendingUserNameEmailId_SP");
        }
    
        public virtual ObjectResult<getPurchaseOrderDetailsByOrderId_Result> getPurchaseOrderDetailsByOrderId(Nullable<int> purchaseOrderId)
        {
            var purchaseOrderIdParameter = purchaseOrderId.HasValue ?
                new ObjectParameter("PurchaseOrderId", purchaseOrderId) :
                new ObjectParameter("PurchaseOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPurchaseOrderDetailsByOrderId_Result>("getPurchaseOrderDetailsByOrderId", purchaseOrderIdParameter);
        }
    
        public virtual ObjectResult<getPurchaseOrders_Result> getPurchaseOrders(string status)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getPurchaseOrders_Result>("getPurchaseOrders", statusParameter);
        }
    
        public virtual ObjectResult<getRequestDetailsByRequestId_Result> getRequestDetailsByRequestId(Nullable<int> inventoryRequestId)
        {
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getRequestDetailsByRequestId_Result>("getRequestDetailsByRequestId", inventoryRequestIdParameter);
        }
    
        public virtual ObjectResult<getRequestStock_Result> getRequestStock(Nullable<int> loginUser, Nullable<bool> isPackage)
        {
            var loginUserParameter = loginUser.HasValue ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(int));
    
            var isPackageParameter = isPackage.HasValue ?
                new ObjectParameter("IsPackage", isPackage) :
                new ObjectParameter("IsPackage", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getRequestStock_Result>("getRequestStock", loginUserParameter, isPackageParameter);
        }
    
        public virtual ObjectResult<getRequestStockById_Result> getRequestStockById(Nullable<int> inventoryRequestId, Nullable<int> loginUser)
        {
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            var loginUserParameter = loginUser.HasValue ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getRequestStockById_Result>("getRequestStockById", inventoryRequestIdParameter, loginUserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getRequestTransactionIds(Nullable<int> distributorOrDealerId)
        {
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getRequestTransactionIds", distributorOrDealerIdParameter);
        }
    
        public virtual ObjectResult<getSellerAndBuyerEmail_Result> getSellerAndBuyerEmail(Nullable<int> inventoryRequestId)
        {
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSellerAndBuyerEmail_Result>("getSellerAndBuyerEmail", inventoryRequestIdParameter);
        }
    
        public virtual ObjectResult<getSellingPriceAndQuantityForInventory_Result> getSellingPriceAndQuantityForInventory(Nullable<int> inventoryId, string batchId)
        {
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            var batchIdParameter = batchId != null ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSellingPriceAndQuantityForInventory_Result>("getSellingPriceAndQuantityForInventory", inventoryIdParameter, batchIdParameter);
        }
    
        public virtual ObjectResult<getSellingPriceForInventory_Result> getSellingPriceForInventory(Nullable<int> inventoryId, string batchId)
        {
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            var batchIdParameter = batchId != null ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSellingPriceForInventory_Result>("getSellingPriceForInventory", inventoryIdParameter, batchIdParameter);
        }
    
        public virtual ObjectResult<getSettings_Result> getSettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSettings_Result>("getSettings");
        }
    
        public virtual ObjectResult<getStateDistricts_Result> getStateDistricts(Nullable<int> stateId)
        {
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStateDistricts_Result>("getStateDistricts", stateIdParameter);
        }
    
        public virtual ObjectResult<string> getStateName(Nullable<int> stateId)
        {
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getStateName", stateIdParameter);
        }
    
        public virtual ObjectResult<getStates_Result> getStates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getStates_Result>("getStates");
        }
    
        public virtual ObjectResult<getSubscriberAddresses_Result> getSubscriberAddresses(Nullable<int> typeId)
        {
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSubscriberAddresses_Result>("getSubscriberAddresses", typeIdParameter);
        }
    
        public virtual ObjectResult<getSubscribersList_Result> getSubscribersList(Nullable<int> typeId, Nullable<int> modeId, string name)
        {
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var modeIdParameter = modeId.HasValue ?
                new ObjectParameter("ModeId", modeId) :
                new ObjectParameter("ModeId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSubscribersList_Result>("getSubscribersList", typeIdParameter, modeIdParameter, nameParameter);
        }
    
        public virtual ObjectResult<getSubscriptionAmount_Result> getSubscriptionAmount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSubscriptionAmount_Result>("getSubscriptionAmount");
        }
    
        public virtual ObjectResult<Nullable<decimal>> getSubscriptionAmountByType(Nullable<int> modeId, Nullable<int> typeId)
        {
            var modeIdParameter = modeId.HasValue ?
                new ObjectParameter("ModeId", modeId) :
                new ObjectParameter("ModeId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("getSubscriptionAmountByType", modeIdParameter, typeIdParameter);
        }
    
        public virtual ObjectResult<getSubscriptionMode_Result> getSubscriptionMode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSubscriptionMode_Result>("getSubscriptionMode");
        }
    
        public virtual ObjectResult<getSubscriptionTransactionDetails_Result> getSubscriptionTransactionDetails(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSubscriptionTransactionDetails_Result>("getSubscriptionTransactionDetails", userIdParameter);
        }
    
        public virtual ObjectResult<getSubscriptionType_Result> getSubscriptionType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSubscriptionType_Result>("getSubscriptionType");
        }
    
        public virtual ObjectResult<getSubscriptionTypeForAdmin_Result> getSubscriptionTypeForAdmin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSubscriptionTypeForAdmin_Result>("getSubscriptionTypeForAdmin");
        }
    
        public virtual ObjectResult<getSubscriptionTypeForUser_Result> getSubscriptionTypeForUser()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getSubscriptionTypeForUser_Result>("getSubscriptionTypeForUser");
        }
    
        public virtual ObjectResult<getTimezone_Result> getTimezone()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTimezone_Result>("getTimezone");
        }
    
        public virtual ObjectResult<getTop5AdminRequests_Result> getTop5AdminRequests()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTop5AdminRequests_Result>("getTop5AdminRequests");
        }
    
        public virtual ObjectResult<getTop5Requests_Result> getTop5Requests(Nullable<int> distributorOrDealerId)
        {
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTop5Requests_Result>("getTop5Requests", distributorOrDealerIdParameter);
        }
    
        public virtual ObjectResult<getTopFiveInventory_Result> getTopFiveInventory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTopFiveInventory_Result>("getTopFiveInventory");
        }
    
        public virtual ObjectResult<getTopOneInventory_Result> getTopOneInventory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTopOneInventory_Result>("getTopOneInventory");
        }
    
        public virtual ObjectResult<getTopOnePackagesfromBooks_Result> getTopOnePackagesfromBooks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTopOnePackagesfromBooks_Result>("getTopOnePackagesfromBooks");
        }
    
        public virtual ObjectResult<getTopOnePackagesfromCds_Result> getTopOnePackagesfromCds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTopOnePackagesfromCds_Result>("getTopOnePackagesfromCds");
        }
    
        public virtual ObjectResult<getTopOnePackagesfromMagazines_Result> getTopOnePackagesfromMagazines()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTopOnePackagesfromMagazines_Result>("getTopOnePackagesfromMagazines");
        }
    
        public virtual ObjectResult<getTransactionDetails_Result> getTransactionDetails(Nullable<int> userId, Nullable<int> userOrderId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userOrderIdParameter = userOrderId.HasValue ?
                new ObjectParameter("UserOrderId", userOrderId) :
                new ObjectParameter("UserOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getTransactionDetails_Result>("getTransactionDetails", userIdParameter, userOrderIdParameter);
        }
    
        public virtual ObjectResult<getUserAddress_Result> getUserAddress(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserAddress_Result>("getUserAddress", userIdParameter);
        }
    
        public virtual ObjectResult<getUserComments_Result> getUserComments(Nullable<int> userId, Nullable<int> inventoryId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserComments_Result>("getUserComments", userIdParameter, inventoryIdParameter);
        }
    
        public virtual int getUserCommentsForAdmin(string inventoryTypeId, string inventoryCategoryId, string inventoryId, Nullable<bool> isApprovedComments)
        {
            var inventoryTypeIdParameter = inventoryTypeId != null ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(string));
    
            var inventoryCategoryIdParameter = inventoryCategoryId != null ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(string));
    
            var inventoryIdParameter = inventoryId != null ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(string));
    
            var isApprovedCommentsParameter = isApprovedComments.HasValue ?
                new ObjectParameter("IsApprovedComments", isApprovedComments) :
                new ObjectParameter("IsApprovedComments", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getUserCommentsForAdmin", inventoryTypeIdParameter, inventoryCategoryIdParameter, inventoryIdParameter, isApprovedCommentsParameter);
        }
    
        public virtual ObjectResult<getUserDetails_Result> getUserDetails(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserDetails_Result>("getUserDetails", userIdParameter);
        }
    
        public virtual ObjectResult<getUserDetails_SP_Result> getUserDetails_SP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserDetails_SP_Result>("getUserDetails_SP");
        }
    
        public virtual int getUserDetailsSearch_SP(string name, string email)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getUserDetailsSearch_SP", nameParameter, emailParameter);
        }
    
        public virtual ObjectResult<getUserNameEmailId_SP_Result> getUserNameEmailId_SP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserNameEmailId_SP_Result>("getUserNameEmailId_SP");
        }
    
        public virtual ObjectResult<GetUserPassword_Result> GetUserPassword(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserPassword_Result>("GetUserPassword", emailParameter);
        }
    
        public virtual ObjectResult<getUserSubscription_Result> getUserSubscription(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserSubscription_Result>("getUserSubscription", userIdParameter);
        }
    
        public virtual ObjectResult<getUserTransactions_Result> getUserTransactions(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserTransactions_Result>("getUserTransactions", userIdParameter);
        }
    
        public virtual ObjectResult<string> getVendorEmail(Nullable<int> vendorId)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("getVendorEmail", vendorIdParameter);
        }
    
        public virtual ObjectResult<getVendorPaymentDetailsById_Result> getVendorPaymentDetailsById(Nullable<int> vendorId)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getVendorPaymentDetailsById_Result>("getVendorPaymentDetailsById", vendorIdParameter);
        }
    
        public virtual ObjectResult<getVendorPayments_Result> getVendorPayments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getVendorPayments_Result>("getVendorPayments");
        }
    
        public virtual ObjectResult<getVendors_Result> getVendors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getVendors_Result>("getVendors");
        }
    
        public virtual ObjectResult<getVendorsByInventoryType_Result> getVendorsByInventoryType(Nullable<int> inventoryTypeId)
        {
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getVendorsByInventoryType_Result>("getVendorsByInventoryType", inventoryTypeIdParameter);
        }
    
        public virtual int insCities(string cityName, Nullable<int> districtId)
        {
            var cityNameParameter = cityName != null ?
                new ObjectParameter("CityName", cityName) :
                new ObjectParameter("CityName", typeof(string));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insCities", cityNameParameter, districtIdParameter);
        }
    
        public virtual int insCouriers(string courierName)
        {
            var courierNameParameter = courierName != null ?
                new ObjectParameter("CourierName", courierName) :
                new ObjectParameter("CourierName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insCouriers", courierNameParameter);
        }
    
        public virtual int insDailyQuote(Nullable<int> dailyQuoteId, string dailyQuote)
        {
            var dailyQuoteIdParameter = dailyQuoteId.HasValue ?
                new ObjectParameter("DailyQuoteId", dailyQuoteId) :
                new ObjectParameter("DailyQuoteId", typeof(int));
    
            var dailyQuoteParameter = dailyQuote != null ?
                new ObjectParameter("DailyQuote", dailyQuote) :
                new ObjectParameter("DailyQuote", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insDailyQuote", dailyQuoteIdParameter, dailyQuoteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> insDistributoresAndDealers(Nullable<int> distributorOrDealerId, string distributorOrDealerName, string email, string mobileNo, string address, string password, Nullable<int> stateId, Nullable<int> districtId, Nullable<int> cityId, Nullable<int> pinCode, string userType, Nullable<int> distributorId, Nullable<int> createdBy)
        {
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            var distributorOrDealerNameParameter = distributorOrDealerName != null ?
                new ObjectParameter("DistributorOrDealerName", distributorOrDealerName) :
                new ObjectParameter("DistributorOrDealerName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var pinCodeParameter = pinCode.HasValue ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(int));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var distributorIdParameter = distributorId.HasValue ?
                new ObjectParameter("DistributorId", distributorId) :
                new ObjectParameter("DistributorId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("insDistributoresAndDealers", distributorOrDealerIdParameter, distributorOrDealerNameParameter, emailParameter, mobileNoParameter, addressParameter, passwordParameter, stateIdParameter, districtIdParameter, cityIdParameter, pinCodeParameter, userTypeParameter, distributorIdParameter, createdByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> insInventory(Nullable<int> inventoryId, string inventoryName, string publisher, Nullable<decimal> inventoryPrice, Nullable<int> inventoryTypeId, Nullable<int> inventoryCategoryId, string inventoryImage, string shotDescription, string longDescription, Nullable<int> firstPrintedYear, Nullable<int> rePrintedYear, string iSBN, Nullable<int> createdBy, string dvdOrCd, string mediaType, string mediaFile, string language, string author)
        {
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            var inventoryNameParameter = inventoryName != null ?
                new ObjectParameter("InventoryName", inventoryName) :
                new ObjectParameter("InventoryName", typeof(string));
    
            var publisherParameter = publisher != null ?
                new ObjectParameter("Publisher", publisher) :
                new ObjectParameter("Publisher", typeof(string));
    
            var inventoryPriceParameter = inventoryPrice.HasValue ?
                new ObjectParameter("InventoryPrice", inventoryPrice) :
                new ObjectParameter("InventoryPrice", typeof(decimal));
    
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            var inventoryCategoryIdParameter = inventoryCategoryId.HasValue ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(int));
    
            var inventoryImageParameter = inventoryImage != null ?
                new ObjectParameter("InventoryImage", inventoryImage) :
                new ObjectParameter("InventoryImage", typeof(string));
    
            var shotDescriptionParameter = shotDescription != null ?
                new ObjectParameter("ShotDescription", shotDescription) :
                new ObjectParameter("ShotDescription", typeof(string));
    
            var longDescriptionParameter = longDescription != null ?
                new ObjectParameter("LongDescription", longDescription) :
                new ObjectParameter("LongDescription", typeof(string));
    
            var firstPrintedYearParameter = firstPrintedYear.HasValue ?
                new ObjectParameter("FirstPrintedYear", firstPrintedYear) :
                new ObjectParameter("FirstPrintedYear", typeof(int));
    
            var rePrintedYearParameter = rePrintedYear.HasValue ?
                new ObjectParameter("RePrintedYear", rePrintedYear) :
                new ObjectParameter("RePrintedYear", typeof(int));
    
            var iSBNParameter = iSBN != null ?
                new ObjectParameter("ISBN", iSBN) :
                new ObjectParameter("ISBN", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var dvdOrCdParameter = dvdOrCd != null ?
                new ObjectParameter("DvdOrCd", dvdOrCd) :
                new ObjectParameter("DvdOrCd", typeof(string));
    
            var mediaTypeParameter = mediaType != null ?
                new ObjectParameter("MediaType", mediaType) :
                new ObjectParameter("MediaType", typeof(string));
    
            var mediaFileParameter = mediaFile != null ?
                new ObjectParameter("MediaFile", mediaFile) :
                new ObjectParameter("MediaFile", typeof(string));
    
            var languageParameter = language != null ?
                new ObjectParameter("Language", language) :
                new ObjectParameter("Language", typeof(string));
    
            var authorParameter = author != null ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("insInventory", inventoryIdParameter, inventoryNameParameter, publisherParameter, inventoryPriceParameter, inventoryTypeIdParameter, inventoryCategoryIdParameter, inventoryImageParameter, shotDescriptionParameter, longDescriptionParameter, firstPrintedYearParameter, rePrintedYearParameter, iSBNParameter, createdByParameter, dvdOrCdParameter, mediaTypeParameter, mediaFileParameter, languageParameter, authorParameter);
        }
    
        public virtual int insInventoryCategories(string categoryName, Nullable<int> inventoryTypeId)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insInventoryCategories", categoryNameParameter, inventoryTypeIdParameter);
        }
    
        public virtual int insMagazineDeliveryDetails(Nullable<System.DateTime> sentDate)
        {
            var sentDateParameter = sentDate.HasValue ?
                new ObjectParameter("SentDate", sentDate) :
                new ObjectParameter("SentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insMagazineDeliveryDetails", sentDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> insMagazineReleaseDate(string monthId, Nullable<int> year, Nullable<System.DateTime> releaseDate, Nullable<int> createdBy)
        {
            var monthIdParameter = monthId != null ?
                new ObjectParameter("MonthId", monthId) :
                new ObjectParameter("MonthId", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var releaseDateParameter = releaseDate.HasValue ?
                new ObjectParameter("ReleaseDate", releaseDate) :
                new ObjectParameter("ReleaseDate", typeof(System.DateTime));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("insMagazineReleaseDate", monthIdParameter, yearParameter, releaseDateParameter, createdByParameter);
        }
    
        public virtual int insPayuInputParameters(string hashParameters, string hash, string postForm, Nullable<bool> sessionExists)
        {
            var hashParametersParameter = hashParameters != null ?
                new ObjectParameter("HashParameters", hashParameters) :
                new ObjectParameter("HashParameters", typeof(string));
    
            var hashParameter = hash != null ?
                new ObjectParameter("Hash", hash) :
                new ObjectParameter("Hash", typeof(string));
    
            var postFormParameter = postForm != null ?
                new ObjectParameter("PostForm", postForm) :
                new ObjectParameter("PostForm", typeof(string));
    
            var sessionExistsParameter = sessionExists.HasValue ?
                new ObjectParameter("SessionExists", sessionExists) :
                new ObjectParameter("SessionExists", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insPayuInputParameters", hashParametersParameter, hashParameter, postFormParameter, sessionExistsParameter);
        }
    
        public virtual int insPayuOutputParameters(string hash, string reverseHash, string status, Nullable<bool> isSessionExists, string transactionId, string mIHPayId)
        {
            var hashParameter = hash != null ?
                new ObjectParameter("Hash", hash) :
                new ObjectParameter("Hash", typeof(string));
    
            var reverseHashParameter = reverseHash != null ?
                new ObjectParameter("ReverseHash", reverseHash) :
                new ObjectParameter("ReverseHash", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var isSessionExistsParameter = isSessionExists.HasValue ?
                new ObjectParameter("IsSessionExists", isSessionExists) :
                new ObjectParameter("IsSessionExists", typeof(bool));
    
            var transactionIdParameter = transactionId != null ?
                new ObjectParameter("TransactionId", transactionId) :
                new ObjectParameter("TransactionId", typeof(string));
    
            var mIHPayIdParameter = mIHPayId != null ?
                new ObjectParameter("MIHPayId", mIHPayId) :
                new ObjectParameter("MIHPayId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insPayuOutputParameters", hashParameter, reverseHashParameter, statusParameter, isSessionExistsParameter, transactionIdParameter, mIHPayIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> insSubscriptionAmount(Nullable<int> modeId, Nullable<int> typeId, Nullable<decimal> amount, Nullable<int> createdBy)
        {
            var modeIdParameter = modeId.HasValue ?
                new ObjectParameter("ModeId", modeId) :
                new ObjectParameter("ModeId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("insSubscriptionAmount", modeIdParameter, typeIdParameter, amountParameter, createdByParameter);
        }
    
        public virtual int insSubscriptionType(string type, Nullable<int> noOfMagazines, Nullable<int> noOfYears, Nullable<int> createdBy)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var noOfMagazinesParameter = noOfMagazines.HasValue ?
                new ObjectParameter("NoOfMagazines", noOfMagazines) :
                new ObjectParameter("NoOfMagazines", typeof(int));
    
            var noOfYearsParameter = noOfYears.HasValue ?
                new ObjectParameter("NoOfYears", noOfYears) :
                new ObjectParameter("NoOfYears", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insSubscriptionType", typeParameter, noOfMagazinesParameter, noOfYearsParameter, createdByParameter);
        }
    
        public virtual int insTempUserOrderDetails(Nullable<int> userId, Nullable<System.DateTime> orderDate, string orderStatus)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var orderStatusParameter = orderStatus != null ?
                new ObjectParameter("OrderStatus", orderStatus) :
                new ObjectParameter("OrderStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insTempUserOrderDetails", userIdParameter, orderDateParameter, orderStatusParameter);
        }
    
        public virtual int insupdArticles(Nullable<int> articleId, string title, string image, string description, Nullable<int> createdBy, string author)
        {
            var articleIdParameter = articleId.HasValue ?
                new ObjectParameter("ArticleId", articleId) :
                new ObjectParameter("ArticleId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var authorParameter = author != null ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdArticles", articleIdParameter, titleParameter, imageParameter, descriptionParameter, createdByParameter, authorParameter);
        }
    
        public virtual int insupdCouriers(Nullable<int> courierId, string courierName, Nullable<decimal> charges)
        {
            var courierIdParameter = courierId.HasValue ?
                new ObjectParameter("CourierId", courierId) :
                new ObjectParameter("CourierId", typeof(int));
    
            var courierNameParameter = courierName != null ?
                new ObjectParameter("CourierName", courierName) :
                new ObjectParameter("CourierName", typeof(string));
    
            var chargesParameter = charges.HasValue ?
                new ObjectParameter("Charges", charges) :
                new ObjectParameter("Charges", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdCouriers", courierIdParameter, courierNameParameter, chargesParameter);
        }
    
        public virtual int insupdCSR(Nullable<int> cSRId, string title, string image, string description, Nullable<int> createdBy, Nullable<System.DateTime> eventDate, Nullable<int> cSRCategoryId)
        {
            var cSRIdParameter = cSRId.HasValue ?
                new ObjectParameter("CSRId", cSRId) :
                new ObjectParameter("CSRId", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var eventDateParameter = eventDate.HasValue ?
                new ObjectParameter("EventDate", eventDate) :
                new ObjectParameter("EventDate", typeof(System.DateTime));
    
            var cSRCategoryIdParameter = cSRCategoryId.HasValue ?
                new ObjectParameter("CSRCategoryId", cSRCategoryId) :
                new ObjectParameter("CSRCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdCSR", cSRIdParameter, titleParameter, imageParameter, descriptionParameter, createdByParameter, eventDateParameter, cSRCategoryIdParameter);
        }
    
        public virtual int insupdCSRCategories(Nullable<int> cSRCategoryId, string categoryName)
        {
            var cSRCategoryIdParameter = cSRCategoryId.HasValue ?
                new ObjectParameter("CSRCategoryId", cSRCategoryId) :
                new ObjectParameter("CSRCategoryId", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdCSRCategories", cSRCategoryIdParameter, categoryNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> insupdEBooks(Nullable<int> eBookId, string eBookImage, string eBookTOC, string eBookFolder, Nullable<decimal> eBookPrice, Nullable<int> inventoryCategoryId, Nullable<int> createdBy, Nullable<int> inventoryId)
        {
            var eBookIdParameter = eBookId.HasValue ?
                new ObjectParameter("eBookId", eBookId) :
                new ObjectParameter("eBookId", typeof(int));
    
            var eBookImageParameter = eBookImage != null ?
                new ObjectParameter("eBookImage", eBookImage) :
                new ObjectParameter("eBookImage", typeof(string));
    
            var eBookTOCParameter = eBookTOC != null ?
                new ObjectParameter("eBookTOC", eBookTOC) :
                new ObjectParameter("eBookTOC", typeof(string));
    
            var eBookFolderParameter = eBookFolder != null ?
                new ObjectParameter("eBookFolder", eBookFolder) :
                new ObjectParameter("eBookFolder", typeof(string));
    
            var eBookPriceParameter = eBookPrice.HasValue ?
                new ObjectParameter("eBookPrice", eBookPrice) :
                new ObjectParameter("eBookPrice", typeof(decimal));
    
            var inventoryCategoryIdParameter = inventoryCategoryId.HasValue ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("insupdEBooks", eBookIdParameter, eBookImageParameter, eBookTOCParameter, eBookFolderParameter, eBookPriceParameter, inventoryCategoryIdParameter, createdByParameter, inventoryIdParameter);
        }
    
        public virtual int insupdEventsAndNews(Nullable<int> eventOrNewsId, string type, Nullable<System.DateTime> eventOrNewsDate, string title, string description, string image, string pdfFile, Nullable<int> createdBY)
        {
            var eventOrNewsIdParameter = eventOrNewsId.HasValue ?
                new ObjectParameter("EventOrNewsId", eventOrNewsId) :
                new ObjectParameter("EventOrNewsId", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var eventOrNewsDateParameter = eventOrNewsDate.HasValue ?
                new ObjectParameter("EventOrNewsDate", eventOrNewsDate) :
                new ObjectParameter("EventOrNewsDate", typeof(System.DateTime));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var pdfFileParameter = pdfFile != null ?
                new ObjectParameter("PdfFile", pdfFile) :
                new ObjectParameter("PdfFile", typeof(string));
    
            var createdBYParameter = createdBY.HasValue ?
                new ObjectParameter("CreatedBY", createdBY) :
                new ObjectParameter("CreatedBY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdEventsAndNews", eventOrNewsIdParameter, typeParameter, eventOrNewsDateParameter, titleParameter, descriptionParameter, imageParameter, pdfFileParameter, createdBYParameter);
        }
    
        public virtual int insUpdHomeImages(Nullable<int> homeImageId, string imageName)
        {
            var homeImageIdParameter = homeImageId.HasValue ?
                new ObjectParameter("HomeImageId", homeImageId) :
                new ObjectParameter("HomeImageId", typeof(int));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insUpdHomeImages", homeImageIdParameter, imageNameParameter);
        }
    
        public virtual int insupdInventoryCategory(Nullable<int> inventoryCategoryId, Nullable<int> inventoryTypeId, string categoryName)
        {
            var inventoryCategoryIdParameter = inventoryCategoryId.HasValue ?
                new ObjectParameter("InventoryCategoryId", inventoryCategoryId) :
                new ObjectParameter("InventoryCategoryId", typeof(int));
    
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdInventoryCategory", inventoryCategoryIdParameter, inventoryTypeIdParameter, categoryNameParameter);
        }
    
        public virtual int insupdInventoryDamageStock(Nullable<int> inventoryDamageStockId, Nullable<int> distributorOrDealerId, Nullable<int> inventoryRequestId, Nullable<int> inventoryId, Nullable<int> quantity, string status, Nullable<decimal> totalAmount, Nullable<decimal> netAmount, Nullable<decimal> discount, Nullable<bool> paymentReceived, string comments)
        {
            var inventoryDamageStockIdParameter = inventoryDamageStockId.HasValue ?
                new ObjectParameter("InventoryDamageStockId", inventoryDamageStockId) :
                new ObjectParameter("InventoryDamageStockId", typeof(int));
    
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var netAmountParameter = netAmount.HasValue ?
                new ObjectParameter("NetAmount", netAmount) :
                new ObjectParameter("NetAmount", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(decimal));
    
            var paymentReceivedParameter = paymentReceived.HasValue ?
                new ObjectParameter("PaymentReceived", paymentReceived) :
                new ObjectParameter("PaymentReceived", typeof(bool));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdInventoryDamageStock", inventoryDamageStockIdParameter, distributorOrDealerIdParameter, inventoryRequestIdParameter, inventoryIdParameter, quantityParameter, statusParameter, totalAmountParameter, netAmountParameter, discountParameter, paymentReceivedParameter, commentsParameter);
        }
    
        public virtual int insupdInventoryRequest(Nullable<int> inventoryRequestId, Nullable<int> distributorOrDealerId, string status, Nullable<bool> isPackage)
        {
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var isPackageParameter = isPackage.HasValue ?
                new ObjectParameter("IsPackage", isPackage) :
                new ObjectParameter("IsPackage", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdInventoryRequest", inventoryRequestIdParameter, distributorOrDealerIdParameter, statusParameter, isPackageParameter);
        }
    
        public virtual int insupdInventoryReturns(Nullable<int> inventoryReturnId, Nullable<int> distributorOrDealerId, Nullable<int> inventoryRequestId, Nullable<int> inventoryId, Nullable<int> quantity, string status, Nullable<decimal> totalAmount, Nullable<decimal> netAmount, Nullable<decimal> discount, Nullable<bool> paymentReceived, string comments)
        {
            var inventoryReturnIdParameter = inventoryReturnId.HasValue ?
                new ObjectParameter("InventoryReturnId", inventoryReturnId) :
                new ObjectParameter("InventoryReturnId", typeof(int));
    
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var netAmountParameter = netAmount.HasValue ?
                new ObjectParameter("NetAmount", netAmount) :
                new ObjectParameter("NetAmount", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(decimal));
    
            var paymentReceivedParameter = paymentReceived.HasValue ?
                new ObjectParameter("PaymentReceived", paymentReceived) :
                new ObjectParameter("PaymentReceived", typeof(bool));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdInventoryReturns", inventoryReturnIdParameter, distributorOrDealerIdParameter, inventoryRequestIdParameter, inventoryIdParameter, quantityParameter, statusParameter, totalAmountParameter, netAmountParameter, discountParameter, paymentReceivedParameter, commentsParameter);
        }
    
        public virtual int insupdInventorySales(Nullable<int> inventorySaleId, Nullable<int> inventoryId, Nullable<int> distributorOrDealerId, Nullable<int> noOfInventoryItems, Nullable<int> batchId, Nullable<decimal> discount, Nullable<decimal> netAmount, Nullable<int> createdBY)
        {
            var inventorySaleIdParameter = inventorySaleId.HasValue ?
                new ObjectParameter("InventorySaleId", inventorySaleId) :
                new ObjectParameter("InventorySaleId", typeof(int));
    
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            var noOfInventoryItemsParameter = noOfInventoryItems.HasValue ?
                new ObjectParameter("NoOfInventoryItems", noOfInventoryItems) :
                new ObjectParameter("NoOfInventoryItems", typeof(int));
    
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(int));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(decimal));
    
            var netAmountParameter = netAmount.HasValue ?
                new ObjectParameter("NetAmount", netAmount) :
                new ObjectParameter("NetAmount", typeof(decimal));
    
            var createdBYParameter = createdBY.HasValue ?
                new ObjectParameter("CreatedBY", createdBY) :
                new ObjectParameter("CreatedBY", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdInventorySales", inventorySaleIdParameter, inventoryIdParameter, distributorOrDealerIdParameter, noOfInventoryItemsParameter, batchIdParameter, discountParameter, netAmountParameter, createdBYParameter);
        }
    
        public virtual int insupdInventoryType(Nullable<int> inventoryTypeId, string inventoryType)
        {
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            var inventoryTypeParameter = inventoryType != null ?
                new ObjectParameter("InventoryType", inventoryType) :
                new ObjectParameter("InventoryType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdInventoryType", inventoryTypeIdParameter, inventoryTypeParameter);
        }
    
        public virtual int insupdPackages(Nullable<int> packageId, string packageName, Nullable<int> inventoryTypeId, Nullable<decimal> packageDiscount, Nullable<int> createdBy, string packageImage, string description, Nullable<int> noOfPackages)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var packageNameParameter = packageName != null ?
                new ObjectParameter("PackageName", packageName) :
                new ObjectParameter("PackageName", typeof(string));
    
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            var packageDiscountParameter = packageDiscount.HasValue ?
                new ObjectParameter("PackageDiscount", packageDiscount) :
                new ObjectParameter("PackageDiscount", typeof(decimal));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var packageImageParameter = packageImage != null ?
                new ObjectParameter("PackageImage", packageImage) :
                new ObjectParameter("PackageImage", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var noOfPackagesParameter = noOfPackages.HasValue ?
                new ObjectParameter("NoOfPackages", noOfPackages) :
                new ObjectParameter("NoOfPackages", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdPackages", packageIdParameter, packageNameParameter, inventoryTypeIdParameter, packageDiscountParameter, createdByParameter, packageImageParameter, descriptionParameter, noOfPackagesParameter);
        }
    
        public virtual int insupdPurchaseOrder(Nullable<int> purchaseOrderId, Nullable<int> vendorId, string purchaseOrderStatus)
        {
            var purchaseOrderIdParameter = purchaseOrderId.HasValue ?
                new ObjectParameter("PurchaseOrderId", purchaseOrderId) :
                new ObjectParameter("PurchaseOrderId", typeof(int));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var purchaseOrderStatusParameter = purchaseOrderStatus != null ?
                new ObjectParameter("PurchaseOrderStatus", purchaseOrderStatus) :
                new ObjectParameter("PurchaseOrderStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdPurchaseOrder", purchaseOrderIdParameter, vendorIdParameter, purchaseOrderStatusParameter);
        }
    
        public virtual int insupdRequestStock(Nullable<int> inventoryRequestId, Nullable<int> distributorOrDealerId)
        {
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            var distributorOrDealerIdParameter = distributorOrDealerId.HasValue ?
                new ObjectParameter("DistributorOrDealerId", distributorOrDealerId) :
                new ObjectParameter("DistributorOrDealerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdRequestStock", inventoryRequestIdParameter, distributorOrDealerIdParameter);
        }
    
        public virtual int insUpdUserComments(Nullable<int> commentId, Nullable<int> userId, Nullable<int> inventoryId, string comment)
        {
            var commentIdParameter = commentId.HasValue ?
                new ObjectParameter("CommentId", commentId) :
                new ObjectParameter("CommentId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insUpdUserComments", commentIdParameter, userIdParameter, inventoryIdParameter, commentParameter);
        }
    
        public virtual int insupdUserDetails_SP(Nullable<int> userId, string firstName, string lastName, string email, string mobileNo, string address, Nullable<int> stateId, Nullable<int> districtId, string city, Nullable<int> pinCode, string profession, Nullable<bool> isSubscribeDailyQuotes, Nullable<bool> isSubscribeNewPackagesalert, Nullable<bool> isSubscribeNewsAndArticles)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pinCodeParameter = pinCode.HasValue ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(int));
    
            var professionParameter = profession != null ?
                new ObjectParameter("Profession", profession) :
                new ObjectParameter("Profession", typeof(string));
    
            var isSubscribeDailyQuotesParameter = isSubscribeDailyQuotes.HasValue ?
                new ObjectParameter("IsSubscribeDailyQuotes", isSubscribeDailyQuotes) :
                new ObjectParameter("IsSubscribeDailyQuotes", typeof(bool));
    
            var isSubscribeNewPackagesalertParameter = isSubscribeNewPackagesalert.HasValue ?
                new ObjectParameter("IsSubscribeNewPackagesalert", isSubscribeNewPackagesalert) :
                new ObjectParameter("IsSubscribeNewPackagesalert", typeof(bool));
    
            var isSubscribeNewsAndArticlesParameter = isSubscribeNewsAndArticles.HasValue ?
                new ObjectParameter("IsSubscribeNewsAndArticles", isSubscribeNewsAndArticles) :
                new ObjectParameter("IsSubscribeNewsAndArticles", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insupdUserDetails_SP", userIdParameter, firstNameParameter, lastNameParameter, emailParameter, mobileNoParameter, addressParameter, stateIdParameter, districtIdParameter, cityParameter, pinCodeParameter, professionParameter, isSubscribeDailyQuotesParameter, isSubscribeNewPackagesalertParameter, isSubscribeNewsAndArticlesParameter);
        }
    
        public virtual int insUserOrderDetails(Nullable<int> userId, Nullable<System.DateTime> orderDate, string orderStatus, string transactionNo, Nullable<System.DateTime> transactionDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var orderStatusParameter = orderStatus != null ?
                new ObjectParameter("OrderStatus", orderStatus) :
                new ObjectParameter("OrderStatus", typeof(string));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insUserOrderDetails", userIdParameter, orderDateParameter, orderStatusParameter, transactionNoParameter, transactionDateParameter);
        }
    
        public virtual int insUserOrderDetailsAfterPayment(Nullable<int> tempUserOrderId, string transactionNo, Nullable<System.DateTime> transactionDate)
        {
            var tempUserOrderIdParameter = tempUserOrderId.HasValue ?
                new ObjectParameter("TempUserOrderId", tempUserOrderId) :
                new ObjectParameter("TempUserOrderId", typeof(int));
    
            var transactionNoParameter = transactionNo != null ?
                new ObjectParameter("TransactionNo", transactionNo) :
                new ObjectParameter("TransactionNo", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insUserOrderDetailsAfterPayment", tempUserOrderIdParameter, transactionNoParameter, transactionDateParameter);
        }
    
        public virtual int insVendor(Nullable<int> vendorId, string vendorName, string address, string contactPerson, Nullable<int> stateID, Nullable<int> districtId, Nullable<int> cityId, Nullable<int> pinCode, string phoneNo, string emailId, string fax, string alternateAddress, string alternatePhoneNo, Nullable<int> inventoryTypeId, Nullable<int> createdBy)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var contactPersonParameter = contactPerson != null ?
                new ObjectParameter("ContactPerson", contactPerson) :
                new ObjectParameter("ContactPerson", typeof(string));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var pinCodeParameter = pinCode.HasValue ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(int));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var emailIdParameter = emailId != null ?
                new ObjectParameter("EmailId", emailId) :
                new ObjectParameter("EmailId", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var alternateAddressParameter = alternateAddress != null ?
                new ObjectParameter("AlternateAddress", alternateAddress) :
                new ObjectParameter("AlternateAddress", typeof(string));
    
            var alternatePhoneNoParameter = alternatePhoneNo != null ?
                new ObjectParameter("AlternatePhoneNo", alternatePhoneNo) :
                new ObjectParameter("AlternatePhoneNo", typeof(string));
    
            var inventoryTypeIdParameter = inventoryTypeId.HasValue ?
                new ObjectParameter("InventoryTypeId", inventoryTypeId) :
                new ObjectParameter("InventoryTypeId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insVendor", vendorIdParameter, vendorNameParameter, addressParameter, contactPersonParameter, stateIDParameter, districtIdParameter, cityIdParameter, pinCodeParameter, phoneNoParameter, emailIdParameter, faxParameter, alternateAddressParameter, alternatePhoneNoParameter, inventoryTypeIdParameter, createdByParameter);
        }
    
        public virtual int insVendorPayment(Nullable<int> vendorId, Nullable<decimal> paidAmount)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var paidAmountParameter = paidAmount.HasValue ?
                new ObjectParameter("PaidAmount", paidAmount) :
                new ObjectParameter("PaidAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insVendorPayment", vendorIdParameter, paidAmountParameter);
        }
    
        public virtual int regeneratePurchaseOrder(Nullable<int> prevPurchaseOrderId, Nullable<int> inventoryId, Nullable<decimal> sellingPrice, Nullable<int> availableQuantity)
        {
            var prevPurchaseOrderIdParameter = prevPurchaseOrderId.HasValue ?
                new ObjectParameter("PrevPurchaseOrderId", prevPurchaseOrderId) :
                new ObjectParameter("PrevPurchaseOrderId", typeof(int));
    
            var inventoryIdParameter = inventoryId.HasValue ?
                new ObjectParameter("InventoryId", inventoryId) :
                new ObjectParameter("InventoryId", typeof(int));
    
            var sellingPriceParameter = sellingPrice.HasValue ?
                new ObjectParameter("SellingPrice", sellingPrice) :
                new ObjectParameter("SellingPrice", typeof(decimal));
    
            var availableQuantityParameter = availableQuantity.HasValue ?
                new ObjectParameter("AvailableQuantity", availableQuantity) :
                new ObjectParameter("AvailableQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("regeneratePurchaseOrder", prevPurchaseOrderIdParameter, inventoryIdParameter, sellingPriceParameter, availableQuantityParameter);
        }
    
        public virtual ObjectResult<sendNotificationBeforeExpiry_Result> sendNotificationBeforeExpiry(Nullable<int> noOfMonths)
        {
            var noOfMonthsParameter = noOfMonths.HasValue ?
                new ObjectParameter("NoOfMonths", noOfMonths) :
                new ObjectParameter("NoOfMonths", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sendNotificationBeforeExpiry_Result>("sendNotificationBeforeExpiry", noOfMonthsParameter);
        }
    
        public virtual ObjectResult<sendNotificationEReaders_Result> sendNotificationEReaders(Nullable<int> noOfMonths)
        {
            var noOfMonthsParameter = noOfMonths.HasValue ?
                new ObjectParameter("NoOfMonths", noOfMonths) :
                new ObjectParameter("NoOfMonths", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sendNotificationEReaders_Result>("sendNotificationEReaders", noOfMonthsParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int SubscribeToEReader(Nullable<int> userId, string transactionId, string paymentStatus, string mIHPayId, Nullable<decimal> totalSubscriptionAmount)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var transactionIdParameter = transactionId != null ?
                new ObjectParameter("TransactionId", transactionId) :
                new ObjectParameter("TransactionId", typeof(string));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            var mIHPayIdParameter = mIHPayId != null ?
                new ObjectParameter("MIHPayId", mIHPayId) :
                new ObjectParameter("MIHPayId", typeof(string));
    
            var totalSubscriptionAmountParameter = totalSubscriptionAmount.HasValue ?
                new ObjectParameter("TotalSubscriptionAmount", totalSubscriptionAmount) :
                new ObjectParameter("TotalSubscriptionAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubscribeToEReader", userIdParameter, transactionIdParameter, paymentStatusParameter, mIHPayIdParameter, totalSubscriptionAmountParameter);
        }
    
        public virtual int updActiveUserStatus_Sp(Nullable<int> userId, string userStatus)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userStatusParameter = userStatus != null ?
                new ObjectParameter("UserStatus", userStatus) :
                new ObjectParameter("UserStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updActiveUserStatus_Sp", userIdParameter, userStatusParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> updateTheDailyQuotes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("updateTheDailyQuotes");
        }
    
        public virtual int updateUserDetails(Nullable<int> userid, string firstName, string lastName, string phoneNo, string address, string city, Nullable<int> stateId, Nullable<int> districtId, Nullable<int> pincode, Nullable<bool> dailyQuotes, Nullable<bool> newPackageAlert, Nullable<bool> newsAndArticles)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("districtId", districtId) :
                new ObjectParameter("districtId", typeof(int));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(int));
    
            var dailyQuotesParameter = dailyQuotes.HasValue ?
                new ObjectParameter("DailyQuotes", dailyQuotes) :
                new ObjectParameter("DailyQuotes", typeof(bool));
    
            var newPackageAlertParameter = newPackageAlert.HasValue ?
                new ObjectParameter("NewPackageAlert", newPackageAlert) :
                new ObjectParameter("NewPackageAlert", typeof(bool));
    
            var newsAndArticlesParameter = newsAndArticles.HasValue ?
                new ObjectParameter("NewsAndArticles", newsAndArticles) :
                new ObjectParameter("NewsAndArticles", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateUserDetails", useridParameter, firstNameParameter, lastNameParameter, phoneNoParameter, addressParameter, cityParameter, stateIdParameter, districtIdParameter, pincodeParameter, dailyQuotesParameter, newPackageAlertParameter, newsAndArticlesParameter);
        }
    
        public virtual int updComplementarySubscription(Nullable<int> subscriberId, string status)
        {
            var subscriberIdParameter = subscriberId.HasValue ?
                new ObjectParameter("SubscriberId", subscriberId) :
                new ObjectParameter("SubscriberId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updComplementarySubscription", subscriberIdParameter, statusParameter);
        }
    
        public virtual int updeReaderTempSubscriptionDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updeReaderTempSubscriptionDetails");
        }
    
        public virtual int updInventoryRequestCosts(Nullable<int> inventoryRequestId, string status, Nullable<decimal> netAmount, Nullable<decimal> discount, Nullable<decimal> totalAmount, Nullable<decimal> paidAmount)
        {
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var netAmountParameter = netAmount.HasValue ?
                new ObjectParameter("NetAmount", netAmount) :
                new ObjectParameter("NetAmount", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(decimal));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("TotalAmount", totalAmount) :
                new ObjectParameter("TotalAmount", typeof(decimal));
    
            var paidAmountParameter = paidAmount.HasValue ?
                new ObjectParameter("PaidAmount", paidAmount) :
                new ObjectParameter("PaidAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updInventoryRequestCosts", inventoryRequestIdParameter, statusParameter, netAmountParameter, discountParameter, totalAmountParameter, paidAmountParameter);
        }
    
        public virtual int updMagazineReleaseDay(Nullable<int> releaseDay)
        {
            var releaseDayParameter = releaseDay.HasValue ?
                new ObjectParameter("ReleaseDay", releaseDay) :
                new ObjectParameter("ReleaseDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updMagazineReleaseDay", releaseDayParameter);
        }
    
        public virtual int updOrderStatus(Nullable<int> userOrderId, string status, string dispatchedDate)
        {
            var userOrderIdParameter = userOrderId.HasValue ?
                new ObjectParameter("UserOrderId", userOrderId) :
                new ObjectParameter("UserOrderId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var dispatchedDateParameter = dispatchedDate != null ?
                new ObjectParameter("DispatchedDate", dispatchedDate) :
                new ObjectParameter("DispatchedDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updOrderStatus", userOrderIdParameter, statusParameter, dispatchedDateParameter);
        }
    
        public virtual int updPurchaseOrderCosts(Nullable<int> purchaseOrderId, Nullable<decimal> amount, Nullable<decimal> discount, Nullable<decimal> netAmount, string purchaseOrderStatus)
        {
            var purchaseOrderIdParameter = purchaseOrderId.HasValue ?
                new ObjectParameter("PurchaseOrderId", purchaseOrderId) :
                new ObjectParameter("PurchaseOrderId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(decimal));
    
            var netAmountParameter = netAmount.HasValue ?
                new ObjectParameter("NetAmount", netAmount) :
                new ObjectParameter("NetAmount", typeof(decimal));
    
            var purchaseOrderStatusParameter = purchaseOrderStatus != null ?
                new ObjectParameter("PurchaseOrderStatus", purchaseOrderStatus) :
                new ObjectParameter("PurchaseOrderStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updPurchaseOrderCosts", purchaseOrderIdParameter, amountParameter, discountParameter, netAmountParameter, purchaseOrderStatusParameter);
        }
    
        public virtual int updRequestStatus(Nullable<int> inventoryRequestId, string status)
        {
            var inventoryRequestIdParameter = inventoryRequestId.HasValue ?
                new ObjectParameter("InventoryRequestId", inventoryRequestId) :
                new ObjectParameter("InventoryRequestId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updRequestStatus", inventoryRequestIdParameter, statusParameter);
        }
    
        public virtual int updSettings(Nullable<int> updatedBy)
        {
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updSettings", updatedByParameter);
        }
    
        public virtual int updSubscriber(string address, Nullable<int> stateId, Nullable<int> districtId, string city, Nullable<int> pinCode, string mobileNo, Nullable<int> userId)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pinCodeParameter = pinCode.HasValue ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(int));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updSubscriber", addressParameter, stateIdParameter, districtIdParameter, cityParameter, pinCodeParameter, mobileNoParameter, userIdParameter);
        }
    
        public virtual int updSubscriptionAmount(Nullable<int> amountId, Nullable<decimal> amount, Nullable<int> updatedBy)
        {
            var amountIdParameter = amountId.HasValue ?
                new ObjectParameter("AmountId", amountId) :
                new ObjectParameter("AmountId", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updSubscriptionAmount", amountIdParameter, amountParameter, updatedByParameter);
        }
    
        public virtual int updTempSubscriptionDetails(Nullable<int> tempSubscriptionDetailId)
        {
            var tempSubscriptionDetailIdParameter = tempSubscriptionDetailId.HasValue ?
                new ObjectParameter("TempSubscriptionDetailId", tempSubscriptionDetailId) :
                new ObjectParameter("TempSubscriptionDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updTempSubscriptionDetails", tempSubscriptionDetailIdParameter);
        }
    
        public virtual int updTempUserOrders(Nullable<int> tempUserOrderId)
        {
            var tempUserOrderIdParameter = tempUserOrderId.HasValue ?
                new ObjectParameter("TempUserOrderId", tempUserOrderId) :
                new ObjectParameter("TempUserOrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updTempUserOrders", tempUserOrderIdParameter);
        }
    
        public virtual int updUserAddress(string address, Nullable<int> stateId, Nullable<int> districtId, string city, Nullable<int> pinCode, Nullable<int> userId)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pinCodeParameter = pinCode.HasValue ?
                new ObjectParameter("PinCode", pinCode) :
                new ObjectParameter("PinCode", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updUserAddress", addressParameter, stateIdParameter, districtIdParameter, cityParameter, pinCodeParameter, userIdParameter);
        }
    
        public virtual ObjectResult<updUserApprovalStatus_Result> updUserApprovalStatus(string code)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<updUserApprovalStatus_Result>("updUserApprovalStatus", codeParameter);
        }
    
        public virtual ObjectResult<string> UserRegistration(string firstName, string lastName, string email, string password, string phoneNo, string title, string profession, Nullable<bool> isSubscribeDailyQuotes, Nullable<bool> isSubscribeNewPackagesalert, Nullable<bool> isSubscribeNewsAndArticles)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var professionParameter = profession != null ?
                new ObjectParameter("Profession", profession) :
                new ObjectParameter("Profession", typeof(string));
    
            var isSubscribeDailyQuotesParameter = isSubscribeDailyQuotes.HasValue ?
                new ObjectParameter("IsSubscribeDailyQuotes", isSubscribeDailyQuotes) :
                new ObjectParameter("IsSubscribeDailyQuotes", typeof(bool));
    
            var isSubscribeNewPackagesalertParameter = isSubscribeNewPackagesalert.HasValue ?
                new ObjectParameter("IsSubscribeNewPackagesalert", isSubscribeNewPackagesalert) :
                new ObjectParameter("IsSubscribeNewPackagesalert", typeof(bool));
    
            var isSubscribeNewsAndArticlesParameter = isSubscribeNewsAndArticles.HasValue ?
                new ObjectParameter("IsSubscribeNewsAndArticles", isSubscribeNewsAndArticles) :
                new ObjectParameter("IsSubscribeNewsAndArticles", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UserRegistration", firstNameParameter, lastNameParameter, emailParameter, passwordParameter, phoneNoParameter, titleParameter, professionParameter, isSubscribeDailyQuotesParameter, isSubscribeNewPackagesalertParameter, isSubscribeNewsAndArticlesParameter);
        }
    }
}
